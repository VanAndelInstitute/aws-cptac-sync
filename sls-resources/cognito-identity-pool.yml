Resources:
  CognitoIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      IdentityPoolName: CptacSync${opt:stage, self:provider.stage}IdentityPool
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders:
        - ClientId:
            Ref: CognitoUserPoolClient
          ProviderName:
            Fn::GetAtt: [ "CognitoUserPool", "ProviderName" ]
            
  CognitoIdentityPoolRoles:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId:
        Ref: CognitoIdentityPool
      Roles:
        authenticated:
          Fn::GetAtt: [CognitoUnauthRole, Arn]
        unauthenticated:
          Fn::GetAtt: [CognitoUnauthRole, Arn]
      RoleMappings:
        # Update with cognito resource cognito-idp.YOUR_REGION.amazonaws.com/YOUR_COGNITO_USERPOOL_ID:YOUR_COGNITO_CLIENT_ID
        # yml and json keys cannot be generated dynamically
        # PROD
        # cognito-idp.us-east-2.amazonaws.com/us-east-2_i4lKifTvI:74aal8u427opdkrkmkdvgmjf6e:
        # MIRROR
        # cognito-idp.us-east-2.amazonaws.com/us-east-2_4K2BnZRGb:7s5n4cf204vfrkb9qg97nbqgf5:
        # DEV
        cognito-idp.us-east-2.amazonaws.com/us-east-2_NNHBlw2uB:2e8jujkb87sn9906ro2qrn2o1s:
          Type: 'Token'
          AmbiguousRoleResolution: 'AuthenticatedRole'

  CognitoAuthRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CptacSync${opt:stage, self:provider.stage}Authorized
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Federated: 'cognito-identity.amazonaws.com'
            Action:
              - 'sts:AssumeRoleWithWebIdentity'
            Condition:
              StringEquals:
                'cognito-identity.amazonaws.com:aud':
                  Ref: CognitoIdentityPool
              # 'ForAnyValue:StringLike':
              #   'cognito-identity.amazonaws.com:amr': authenticated
      Policies:
        - PolicyName: "${self:service}-${opt:stage, self:provider.stage}-authorized"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'mobileanalytics:PutEvents'
                  - 'cognito-sync:*'
                  - 'cognito-identity:*'
                Resource: '*'
              
              - Effect: 'Allow'
                Action:
                  - 'execute-api:Invoke'
                  - 'apigateway:GET'
                  - 'apigateway:PUT'
                Resource:
                  Fn::Join:
                    - ''
                    -
                      - 'arn:aws:execute-api:'
                      - Ref: AWS::Region
                      - ':'
                      - Ref: AWS::AccountId
                      - ':'
                      - Ref: ApiGatewayRestApi
                      - '/*'

  CognitoUnauthRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CptacSync${opt:stage, self:provider.stage}Unauthorized
      Path: /
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Federated: "cognito-identity.amazonaws.com"
            Action:
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                "cognito-identity.amazonaws.com:aud":
                  Ref: CognitoIdentityPool
              # "ForAnyValue:StringLike":
              #   "cognito-identity.amazonaws.com:amr": unauthenticated
      Policies:
        - PolicyName: "${self:service}-${opt:stage, self:provider.stage}-unauthorized"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "mobileanalytics:PutEvents"
                  - "cognito-sync:*"
                  - "cognito-identity:*"
                Resource: "*"
Outputs:
  IdentityPoolId:
    Value:
      Ref: CognitoIdentityPool