service: cptac-sync

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-east-2
  profile: vai
  tags:
    costcenter: pbc
  stackTags:
    costcenter: pbc
  deploymentBucket:
    tags:
      costcenter: pbc
  environment:
    BSI_BASE_URL: 'https://rest-mirror.bsisystems.com/api/rest/'
    BSI_RECEIPTS: ${self:service}-${opt:stage, self:provider.stage}-receipts
    BSI_RECEIPTS_SYNC: ${self:service}-${opt:stage, self:provider.stage}-receipts-sync
    BSI_ISCANS: ${self:service}-${opt:stage, self:provider.stage}-iscans
    BSI_ISCANS_SYNC: ${self:service}-${opt:stage, self:provider.stage}-iscans-sync
    BSI_MOLECULARQCS: ${self:service}-${opt:stage, self:provider.stage}-molecularqcs
    BSI_MOLECULARQCS_SYNC: ${self:service}-${opt:stage, self:provider.stage}-molecularqcs-sync
    LATEST_RECORD: ${self:service}-${opt:stage, self:provider.stage}-latest-record
  iamRoleStatements:
    - Effect: Allow
      Action:
        - secretsmanager:GetSecretValue
      Resource: 'arn:aws:secretsmanager:${opt:region, self:provider.region}:*:secret:bsi-cptac-service-SGLi6d'
    - Effect: Allow
      Action:
        - dynamodb:ListStreams
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:service}-${opt:stage, self:provider.stage}-*"
package:
  exclude:
    - client/**
    - README.md
    - .gitignore

functions:
  # Scheduled Tasks
  pull-recent-changes:
    handler: handlers.pullrecentchanges
    timeout: 600
    memorySize: 256
    alarms:
      - name: functionErrors
        threshold: 9
        period: 10800
    events:
      - name: ${self:service}-${opt:stage, self:provider.stage}-iscan-timer
      - schedule: cron(0 6-19 * * ? *)
  # Stream Subscriptions
  sync-receipt:
    handler: handlers.syncreceipt
    timeout: 30
    memorySize: 256
    events:
      - stream:
          type: dynamodb
          batchSize: 1
          startingPosition: LATEST
          arn:
            Fn::GetAtt:
              - ShipmentReceipts
              - StreamArn
  sync-molecularqc:
    handler: handlers.syncmolecularqc
    timeout: 30
    memorySize: 256
    events:
      - stream:
          type: dynamodb
          batchSize: 1
          startingPosition: LATEST
          arn:
            Fn::GetAtt:
              - Molecularqcs
              - StreamArn
  sync-iscan:
    handler: handlers.synciscan
    timeout: 30
    memorySize: 256
    events:
      - stream:
          type: dynamodb
          batchSize: 1
          startingPosition: LATEST
          arn:
            Fn::GetAtt:
              - Iscans
              - StreamArn
  # Shipment Receipts API
  get-receipt:
    handler: handlers.getreceipt
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: receipt/{id}
          method: get
          request:
            parameters:
              paths:
                id: true
          cors: true
          authorizer: aws_iam
  get-receipt-sync:
    handler: handlers.getreceiptsync
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: receiptsync/{id}
          method: get
          request:
            parameters:
              paths:
                id: true
          cors: true
          authorizer: aws_iam
  rebuild-receipt:
    handler: handlers.rebuildreceipt
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: receipt/{id}
          method: put
          request:
            parameters:
              paths:
                id: true
          cors: true
          authorizer: aws_iam
  resync-receipt:
    handler: handlers.resyncreceipt
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: receiptsync/{id}
          method: put
          request:
            parameters:
              paths:
                id: true
          cors: true
          authorizer: aws_iam
  pull-recent-receipts:
    handler: handlers.pullrecentreceipts
    memorySize: 256
    timeout: 600
    environment:
      BSI_RECEIPTS: ${self:service}-${opt:stage, self:provider.stage}-receipts
      LATEST_RECORD: ${self:service}-${opt:stage, self:provider.stage}-latest-record
    events:
      - http:
         path: pullreceipts
         method: put
         async: true
         cors: true
         authorizer: aws_iam
  # IScan API
  get-iscan:
    handler: handlers.getiscan
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: iscan/{id}
          method: get
          request:
            parameters:
              paths:
                id: true
          cors: true
          authorizer: aws_iam
  get-iscan-sync:
    handler: handlers.getiscansync
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: iscansync/{id}
          method: get
          request:
            parameters:
              paths:
                id: true
          cors: true
          authorizer: aws_iam
  rebuild-iscan:
    handler: handlers.rebuildiscan
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: iscan/{id}
          method: put
          request:
            parameters:
              paths:
                id: true
          cors: true
          authorizer: aws_iam
  resync-iscan:
    handler: handlers.resynciscan
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: iscansync/{id}
          method: put
          request:
            parameters:
              paths:
                id: true
          cors: true
          authorizer: aws_iam
  pull-recent-iscan:
    handler: handlers.pullrecentiscans
    timeout: 600
    memorySize: 256
    events:
      - http:
         path: pulliscans
         method: put
         async: true
         cors: true
         authorizer: aws_iam
  # Molecular QC API
  get-molecularqc:
    handler: handlers.getmolecularqc
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: molecularqc/{id}
          method: get
          request:
            parameters:
              paths:
                id: true
          cors: true
          authorizer: aws_iam
  get-molecularqc-sync:
    handler: handlers.getmolecularqcsync
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: molecularqcsync/{id}
          method: get
          request:
            parameters:
              paths:
                id: true
          cors: true
          authorizer: aws_iam
  rebuild-molecularqc:
    handler: handlers.rebuildmolecularqc
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: molecularqc/{id}
          method: put
          request:
            parameters:
              paths:
                id: true
          cors: true
          authorizer: aws_iam
  resync-molecularqc:
    handler: handlers.resyncmolecularqc
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: molecularqcsync/{id}
          method: put
          request:
            parameters:
              paths:
                id: true
          cors: true
          authorizer: aws_iam
  pull-recent-molecularqc:
    handler: handlers.pullrecentmolecularqcs
    timeout: 600
    memorySize: 256
    events:
      - http:
         path: pullmolecularqcs
         method: put
         async: true
         cors: true
         authorizer: aws_iam

resources:
  # DynamoDB
  - ${file(sls-resources/dynamodb-shipment-receipts.yml)}
  - ${file(sls-resources/dynamodb-shipment-receipts-sync.yml)}
  - ${file(sls-resources/dynamodb-molecularqcs.yml)}
  - ${file(sls-resources/dynamodb-molecularqcs-sync.yml)}
  - ${file(sls-resources/dynamodb-iscans.yml)}
  - ${file(sls-resources/dynamodb-iscans-sync.yml)}
  - ${file(sls-resources/dynamodb-latest-record.yml)}
  # Cognito
  - ${file(sls-resources/cognito-user-pool.yml)}
  - ${file(sls-resources/cognito-identity-pool.yml)}
  # S3
  # TODO: Add www.domain.com redirect to domain.com

plugins:
  - serverless-finch
  - serverless-plugin-aws-alerts

custom:
  client:
    bucketName: ${self:service}-${opt:stage, self:provider.stage}.aws.vai.org
    distributionFolder: client/build
    errorDocument: index.html
  alerts:
    definitions:
      functionErrors:
        threshold: 3
        period: 600
        treatMissingData: notBreaching
    stages:
      - dev
    topics:
      alarm:
        topic: ${self:service}-${self:provider.stage}-alerts-alarm
        notifications:
          - protocol: email
            endpoint: anthony.watkins@vai.org
    alarms:
      - functionErrors